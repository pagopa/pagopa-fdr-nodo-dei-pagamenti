# Only manual triggers
trigger: none
pr: none

pool:
  vmImage: 'ubuntu-22.04'

parameters:
  - name: env
    displayName: Environment
    type: string
    default: dev
    values:
      - dev
      - prf
  - name: feature_path
    displayName: useful for testing a subset of features
    type: string
    default: /
    values:
      - /
      - /appIO
      - /appIO/primitives
      - /appIO/flows
      - /appIO/flows/Annullo_PagamentoIO
      - /appIO/flows/pspNotifyPayment
      - /appIO/flows/activateIOPayment
      - /appIO/flows/task_509
      - /appIO/flows/chiediListaPSP
      - /appIO/flows/PagamentiAppIO
      - /appIO/flows/GestioneDelToken
      - /PrimitiveAccessorie
      - /PrimitiveAccessorie/primitives
      - /PrimitiveAccessorie/flows
      - /OldMod3
      - /OldMod3/primitives
      - /FAULTBEAN_ESTESO
      - /appIO-BPAY
      - /appIO-BPAY/primitives
      - /appIO-BPAY/flows
      - /Mod1MB
      - /Mod1MB/primitives
      - /Mod1MB/flows
      - /Mod1MB/flows/gestione_RT_e_Receipt
      - /Mod1MB/flows/nodoInviaCarrelloMb
      - /Mod1MB/flows/gestioneAnnulli
      - /Mod1MB/flows/inoltroPagamento
      - /Mod4
      - /Mod4/primitives
      - /Mod4/flows
      - /RendicontazioneOnline_SOAP
      - /RendicontazioneOnline_SOAP/primitives
      - /NewMod1
      - /NewMod1/primitives
      - /NewMod1/flows
      - /RTPull
      - /RTPull/flows
      - /Validazione_RT_RPT
      - /Validazione_RT_RPT/primitives
      - /Validazione_RT_RPT/flows
      - /Informative
      - /Informative/nodoChiediCatalogoServizi
      - /Informative/nodoPAChiediInformativaPA
      - /Informative/nodoChiediTemplateInformativaPSP
      - /Informative/nodoChiediInformativaPA
      - /MBD
      - /MBD/primitives
      - /MBD/primitives/paGetPaymentV2
      - /MBD/flows
      - /MBD/flows/paSendRTV2
      - /MBD/flows/activatePaymentNoticeV2_paGetPaymentV2
      - /appIOold
      - /RendicontazioneFTPeBollo
      - /appIO-Paypal
      - /appIO-Paypal/flows
      - /appIO-Paypal/flows/OLD_migrazioneStazione
      - /appIO-Checkout
      - /appIO-Checkout/flows
      - /Mod1
      - /Mod1/flows
      - /Mod1/flows/pspInviaRPT
      - /Mod1/flows/nodoNotificaAnnullamento
      - /Mod1/flows/nodoInoltraPagamentoMod1
      - /Mod1/flows/SunnyDay
      - /Mod1/flows/pspChiediAvanzamentoRPT
      - /Mod1/flows/pspInviaCarrelloRPT
      - /Mod1/flows/SOLO_SOAPUI
      - /Mod1/flows/SOLO_SOAPUI/SD_SUNNY_DAY_e_INFORMATIVE
      - /Mod1/flows/SOLO_SOAPUI/SD_SUNNY_DAY_e_INFORMATIVE/INFORMATIVE
      - /Mod1/flows/SOLO_SOAPUI/SD_SUNNY_DAY_e_INFORMATIVE/SUNNY_DAY
      - /Mod1/flows/SOLO_SOAPUI/nodoChiediAvanzamentoPagamento
      - /Mod1/flows/SOLO_SOAPUI/SD_WALLET_e_ANNULLAMENTO_CON_MOTIVAZIONE_03
      - /Mod1/flows/SOLO_SOAPUI/SD_CHIEDI_STATO_e_CHIEDI_AVANZAMENTO
      - /Mod1/flows/ChiediStato
      - /Mod1/flows/Annullamento
      - /Mod1/flows/RPT_UNIVERSALE
      - /Mod1/flows/Informative
      - /Mod1/flows/nodoChiediListaPSP
      - /Mod1/flows/nodoInoltraPagamentoMod2
      - /Mod1/flows/nodoInviaCarrelloRPT
      - /Mod1/flows/nodoInviaRPT
      - /Mod1/flows/pspInviaCarrelloRPTCarte
      - /Mod1/flows/Wallet
      - /Mod1/flows/nodoChiediAvanzamento
      - /Mod1/flows/nodoInviaRT
      - /Mod1/flows/nodoChiediInformazioniPagamento
      - /Mod1/flows/nodoInoltraPagamentoEsitoCarta
      - /RTPush
      - /RTPush/flows
      - /NewMod3
      - /NewMod3/primitives
      - /NewMod3/flows
      - /NewMod3/flows/MigrazioneStazione_PagamentoInCorso
      - /NewMod3/flows/TestGenerazioneRicevute
      - /NewMod3/flows/sendPaymentOutcome
      - /NewMod3/flows/verifyPaymentNotice
      - /NewMod3/flows/Revisione_nodoInviaRPT
      - /NewMod3/flows/AccessiConcorrenzialiPaypal
      - /NewMod3/flows/RevisionePollerAnnulliMod3
      - /NewMod3/flows/AccessiConcorrenziali
      - /NewMod3/flows/paSendRT
      - /NewMod3/flows/TestGenerazioneRicevute03
      - /NewMod3/flows/RetryATokenScaduto
      - /NewMod3/flows/PAnew_GestioneCommissioniEvolute
      - /NewMod3/flows/activatePaymentNotice
      - /NewMod3/flows/GestioneAccessiConcorrenziali
      - /NewMod3/flows/verificaBollettinoEPoste

resources:
  repositories:
    - repository: InTestRepo
      type: github
      endpoint: io-azure-devops-github-rw
      name: pagopa/pagopa-nodo-dei-pagamenti-test
      ref: NOD-32-integrazione-nelle-pipeline # da parametrizzare


variables:
  ${{ if eq(parameters.env, 'dev') }}:
    DB_HOST: pagopa-d-weu-nodo-flexible-postgresql
    AZURE_SERVICE_CONNECTION: '$(TF_DEV_AZURE_SERVICE_CONNECTION)'
    KEY_VAULT_NAME: 'pagopa-d-nodo-kv'

#    deploy-pool: TODO
  ${{ elseif eq(parameters.env, 'uat') }}:
    DB_HOST: pagopa-u-weu-nodo-flexible-postgresql
    AZURE_SERVICE_CONNECTION: '$(TF_UAT_AZURE_SERVICE_CONNECTION)'
    KEY_VAULT_NAME: 'pagopa-u-nodo-kv'
#    deploy-pool: TODO


stages:
  - stage: run_test
    displayName: "Run integration test (${{ parameters.env }})"
#    pool: $(deploy-pool)
    jobs:
      - job: prepare_run_test
        displayName: "Prepare and run tests env (${{ parameters.env }})"
        timeoutInMinutes: 0 # how long to run the job before automatically cancelling. When 0 is specified, the maximum limit is used
        steps:
          - checkout: InTestRepo
            clean: true
            persistCredentials: true

          - task: AzureKeyVault@2
            displayName: "Get secrets"
            inputs:
              azureSubscription: DEV-PAGOPA-SERVICE-CONN # TODO use var
              keyVaultName: $(KEY_VAULT_NAME)
              secretsFilter: 'db-administrator-login-password,db-cfg-password,db-online-password,db-offline-password,db-re-password,db-wfesp-password,SUBSCRIPTION-KEY-NDP'

          - script: |
              function replace {
              file=$1
              key=$2
              value=$3
              
              contents=$(jq "$key = \"$value\"" $file) && echo "${contents}" > $file
              }
  
              file=./src/integ-test/bdd-test/resources/config.json
              
              https://api.uat.platform.pagopa.it/nodo-replica-ndp/nodo-per-pa/v1

              replace $file ".services.\"nodo-dei-pagamenti\".url"           "https://api.${{ parameters.env }}.platform.pagopa.it/nodo-replica-ndp"
              replace $file ".services.\"nodo-dei-pagamenti\".healthcheck"   ""
              replace $file ".services.\"nodo-dei-pagamenti\".soap_service"  " "
              replace $file ".services.\"nodo-dei-pagamenti\".rest_service"  " "
              replace $file ".services.\"nodo-dei-pagamenti\".refresh_config_service"  "https://api.${{ parameters.env }}.platform.pagopa.it/nodo-replica-ndp/monitoring/v1/config/refresh/CONFIG"
              
              replace $file ".services.\"mock-ec\".url"           "https://api.${{ parameters.env }}.platform.pagopa.it/mock-ec-replica-ndp/service/v1/mock"
              replace $file ".services.\"mock-ec\".healthcheck"   "/info"
              replace $file ".services.\"mock-ec\".soap_service"  ""
              replace $file ".services.\"mock-ec\".rest_service"  ""
              
              replace $file ".services.\"secondary-mock-ec\".url"           "https://api.${{ parameters.env }}.platform.pagopa.it/mock-ec-secondary-replica-ndp/service/v1/mock"
              replace $file ".services.\"secondary-mock-ec\".healthcheck"   "/info"
              replace $file ".services.\"secondary-mock-ec\".soap_service"  ""
              replace $file ".services.\"secondary-mock-ec\".rest_service"  ""
              
              
              replace $file ".services.\"mock-psp\".url"           "https://api.${{ parameters.env }}.platform.pagopa.it/mock-psp-replica-ndp/service/v1/mock"
              replace $file ".services.\"mock-psp\".healthcheck"   "/info"
              replace $file ".services.\"mock-psp\".soap_service"  ""
              replace $file ".services.\"mock-psp\".rest_service"  ""
              
              replace $file ".services.\"secondary-mock-psp\".url"           "https://api.${{ parameters.env }}.platform.pagopa.it/mock-psp-secondary-replica-ndp/service/v1/mock"
              replace $file ".services.\"secondary-mock-psp\".healthcheck"   "/info"
              replace $file ".services.\"secondary-mock-psp\".soap_service"  ""
              replace $file ".services.\"secondary-mock-psp\".rest_service"  ""
              
              replace $file ".services.\"mock-pm\".url"           "https://api.${{ parameters.env }}.platform.pagopa.it/mock-pm-replica-ndp/service/v1"
              replace $file ".services.\"mock-pm\".healthcheck"   "/"
              replace $file ".services.\"mock-pm\".soap_service"  ""
              replace $file ".services.\"mock-pm\".rest_service"  ""
                          
              replace $file ".db_configuration.nodo_cfg.host"     "$(DB_HOST).postgres.database.azure.com"
              replace $file ".db_configuration.nodo_cfg.database" "nodo"
              replace $file ".db_configuration.nodo_cfg.user"     "cfg"
              replace $file ".db_configuration.nodo_cfg.password" $(db-cfg-password)
              replace $file ".db_configuration.nodo_cfg.port"     "5432"
              
              replace $file ".db_configuration.nodo_online.host"      "$(DB_HOST).postgres.database.azure.com"
              replace $file ".db_configuration.nodo_online.database"  "nodo"
              replace $file ".db_configuration.nodo_online.user"      "online"
              replace $file ".db_configuration.nodo_online.password"  $(db-online-password)
              replace $file ".db_configuration.nodo_online.port"      "5432"
              
              replace $file ".db_configuration.nodo_offline.host"       "$(DB_HOST).postgres.database.azure.com"
              replace $file ".db_configuration.nodo_offline.database"   "nodo"
              replace $file ".db_configuration.nodo_offline.user"       "offline"
              replace $file ".db_configuration.nodo_offline.password"   $(db-offline-password)
              replace $file ".db_configuration.nodo_offline.port"       "5432"
              
              replace $file ".db_configuration.re.host"       "$(DB_HOST).postgres.database.azure.com"
              replace $file ".db_configuration.re.database"   "nodo"
              replace $file ".db_configuration.re.user"       "re"
              replace $file ".db_configuration.re.password"   $(db-re-password)
              replace $file ".db_configuration.re.port"       "5432"
              
              replace $file ".db_configuration.wfesp.host"      "$(DB_HOST).postgres.database.azure.com"
              replace $file ".db_configuration.wfesp.database"  "nodo"
              replace $file ".db_configuration.wfesp.user"      "wfesp"
              replace $file ".db_configuration.wfesp.password"  $(db-wfesp-password)
              replace $file ".db_configuration.wfesp.port"      "5432"
            
              jq . $file
            displayName: "Configure Global Properties"

          - script: |
              ls $(Build.SourcesDirectory)
              export PATH=/usr/bin:/usr/local/bin:$PATH #Add environment variables
              echo 'Install Behave'
              sudo pip3 install behave 
              sudo pip3 install -U -r $(Build.SourcesDirectory)/requirements.txt #Install Requirements
              echo python version
              python3 -V
              whereis behave
              which behave
              export PATH=/usr/local/bin/behave:/usr/bin:/usr/local/bin:$PATH #Add environment variables
              export NODOPGDB=true
              export SUBSCRIPTION_KEY=$(SUBSCRIPTION-KEY-NDP)
              behave --junit-directory=$(Pipeline.Workspace)/report --junit $(Build.SourcesDirectory)/src/integ-test/bdd-test/features${{ parameters.feature_path }} --tags=runnable,midRunnable --summary --show-timings -v

            displayName: "Run integration test"


          - task: PublishTestResults@2
            condition: succeededOrFailed()
            inputs:
              testResultsFiles: "$(Pipeline.Workspace)/report/*.xml"
              mergeTestResults: true
              testRunTitle: Integration test Nodo $(Build.BuildNumber)
              failTaskOnFailedTests: true
