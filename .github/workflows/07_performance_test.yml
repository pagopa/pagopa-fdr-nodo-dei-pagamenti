name: Performance Test

on:
  #  schedule:
  #    - cron: '35 16 * * *'

  workflow_dispatch:
    inputs:
      environment:
        required: true
        type: choice
        description: Select the Environment
        options:
          - dev
          - uat
      test-type:
        required: true
        type: choice
        description: Select the Test Type
        options:
          - ramping
          - constant
          - load
          - smoke
          - soak
          - spike
          - stress
      script-name:
        required: true
        type: choice
        description: Select the Script Name
        options:
          - happy_case_scenario
          - only_nodoInviaFlussoRendicontazione_scenario
      flow-size:
        required: true
        type: number
        description: Select the number of payments sent in flow
        default: 5

permissions:
  id-token: write
  contents: read
  deployments: write

jobs:
  run_performance_test:
    name: Performance test on ${{(github.event.inputs == null && 'dev') || inputs.environment }}
    runs-on: ubuntu-latest
    environment: ${{(github.event.inputs == null && 'dev') || inputs.environment }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@1f9a0c22da41e6ebfa534300ef656657ea2c6707

      - name: Run k6 script
        run: |
          cd ./performance-test
          sub_key="${{ secrets.INTEGRATION_TEST_SUBSCRIPTION_KEY }}" env="${{ inputs.environment }}" type="${{ inputs.test-type }}" script="${{ inputs.script-name }}" flow_size="${{ inputs.flow-size }}" db_name=fdr1_k6 docker compose -f docker-compose.yaml up
        #          sh ./performance-test/run_performance_test.sh ${{ env.ENVIRONMENT }} ${{ env.TEST_TYPE }} ${{ env.SCRIPT }} ${{ secrets.API_SUBSCRIPTION_KEY }}
        #${{ secrets.COSMOS_SUBSCRIPTION_KEY }}

  delete_github_deployments:
    runs-on: ubuntu-latest
    needs: run_performance_test
    if: ${{ always() }}
    steps:
      - name: Delete Previous deployments
        uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410 # v6
        env:
          SHA_HEAD: ${{ (github.event_name == 'pull_request' && github.event.pull_request.head.sha) || github.sha}}
        with:
          script: |
            const { SHA_HEAD } = process.env

            const deployments = await github.rest.repos.listDeployments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: SHA_HEAD
            });
            await Promise.all(
              deployments.data.map(async (deployment) => {
                await github.rest.repos.createDeploymentStatus({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  deployment_id: deployment.id,
                  state: 'inactive'
                });
                return github.rest.repos.deleteDeployment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  deployment_id: deployment.id
                });
              })
            );