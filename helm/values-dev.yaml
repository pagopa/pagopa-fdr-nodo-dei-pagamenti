microservice-chart:
  namespace: "nodo"
  nameOverride: ""
  fullnameOverride: "wisp-soap-converter"
  image:
    repository: ghcr.io/pagopa/pagopa-wisp-soap-converter
    tag: 0.3.3-201-PIDM-492-workload-identity-helm-7
  terminationGracePeriodSeconds: 140
  livenessProbe:
    handlerType: httpGet
    httpGet:
      path: /alive
      port: 8558
    initialDelaySeconds: 60
    failureThreshold: 10
    periodSeconds: 5
  readinessProbe:
    handlerType: httpGet
    httpGet:
      path: /ready
      port: 8558
    initialDelaySeconds: 60
    failureThreshold: 10
    periodSeconds: 5
  deployment:
    create: true
    replicas: 1
  serviceMonitor:
    create: true
    endpoints:
      - interval: 10s #micrometer
        targetPort: 9092
        path: /
      - interval: 10s #cinnamon
        targetPort: 9091
        path: /metrics
  ports:
    - 8080 #http
    - 8558 #akka-management
    - 9091 #cinnamon
    - 9092 #micrometer
    - 3000 #jmx debug port
  service:
    type: ClusterIP
    ports:
      - 8080 #http
      - 9091 #cinnamon
      - 9092 #micrometer
  ingress:
    create: true
    host: "weudev.nodo.internal.dev.platform.pagopa.it"
    path: /wisp-soapconverter/(.*)
    annotations: {nginx.ingress.kubernetes.io/proxy-read-timeout: '130'}
    # proxyBodySize: 100m
  tmpVolumeMount:
    create: true
  serviceAccount:
    name: "nodo-workload-identity"
  azure:
    workloadIdentityClientId: <workload-identity-client-id-set-automatically-by-gha>
  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - all
  resources:
    requests:
      memory: "512M"
      cpu: "512m"
    limits:
      memory: "2Gi"
      cpu: "900m"
  autoscaling:
    enable: true
    minReplica: 1
    maxReplica: 1
    triggers:
      - type: cpu
        metricType: Utilization
        metadata:
          value: "70"
      - type: memory
        metricType: Utilization
        metadata:
          value: "80"
    advanced:
      horizontalPodAutoscalerConfig:
        behavior:
          scaleDown:
            stabilizationWindowSeconds: 300
            policies:
              - type: Pods
                value: 1
                periodSeconds: 20
          scaleUp:
            stabilizationWindowSeconds: 0
            policies:
              - type: Percent
                value: 100
                periodSeconds: 20
  envConfig:
    SERVICE_IDENTIFIER: "WSC001"
    AZURE_INSIGHTS_ENABLED: "true"
    APPLICATIONINSIGHTS_ROLE_NAME: "wispsoapconverter"
    MANAGEMENT_HTTP_PORT: "8558"
    MANAGEMENT_HTTP_BIND_HOST: "0.0.0.0"
    MANAGEMENT_HTTP_BIND_PORT: "8558"
    SERVICE_HTTP_PORT: "8080"
    SERVICE_HTTP_BIND_HOST: "0.0.0.0"
    SERVICE_HTTP_BIND_PORT: "8080"
    PROMETHEUS_HOST: "0.0.0.0"
    PROMETHEUS_PORT: "9091"
    MICROMETER_HOST: "0.0.0.0"
    MICROMETER_PORT: "9092"
    TZ: "Europe/Rome"
    AKKA_SYSTEM_NAME: "wispsoapconverter"
    JAVA_OPTS: >-
      -Xmx1780m -Xms64m -Dlogback.configurationFile=/mnt/file-config/logback.xml -Dconfig.app=/mnt/file-config/config-app.conf -Duser.language=it  -Duser.country=IT -Duser.timezone=Europe/Rome -Dfile.encoding=UTF-8 -Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.port=3000 -Dcom.sun.management.jmxremote.rmi.port=3000 -Djava.rmi.server.hostname=127.0.0.1 -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false
    INSTANCE: DEV
    API_CONFIG_CACHE_URL: "https://api.dev.platform.pagopa.it/api-config-cache/p/v1/stakeholders/wisp/cache/schemas/v1"
    AZURE_COSMOS_ENDPOINT: "https://pagopa-d-weu-nodo-wispconv-cosmos-account.documents.azure.com:443/"
    AZURE_STORAGE_BLOB_NAME: "payloads"
    AZURE_STORAGE_TABLE_NAME: "events"
    AZURE_COSMOS_DB_NAME: "wispconverter"
    AZURE_COSMOS_TABLE_NAME_DATA: "data"
    AZURE_COSMOS_TABLE_NAME_EVENTS: "re"
    AZURE_COSMOS_TABLE_NAME_RECEIPTS_RT: "receipts-rt"
    ADAPTER_ECOMMERCE_URL: "https://dev.wisp2.pagopa.it/wisp-converter/redirect/api/v1/payments?idSession=REPLACE"
    RE_XML_LOG_ACTIVE: "false"
    RE_JSON_LOG_ACTIVE: "true"
    config-app.conf: "reference {\n  akka {\n    management {\n      http {\n        hostname = 127.0.0.1\n        hostname = ${?MANAGEMENT_HTTP_HOST}\n        port = 8558\n        port = ${?MANAGEMENT_HTTP_PORT}\n        bind-hostname = 0.0.0.0\n        bind-hostname = ${?MANAGEMENT_HTTP_BIND_HOST}\n        bind-port = 8558\n        bind-port = ${?MANAGEMENT_HTTP_BIND_PORT}\n      }\n    }\n    remote {\n      artery {\n        transport = tcp\n        canonical{\n          hostname = 127.0.0.1\n          hostname = ${?REMOTING_HOST}\n          port = 2552\n          port = ${?REMOTING_PORT}\n        }\n        bind {\n          hostname = 127.0.0.1\n          hostname = ${?REMOTING_BIND_HOST}\n          port = 2552\n          port = ${?REMOTING_BIND_PORT}\n        }\n        advanced {\n          maximum-frame-size = 16 MiB\n        }\n      }\n      log-remote-lifecycle-events = off\n    }\n\n    coordinated-shutdown {\n      phases {\n        service-requests-done {\n          timeout=135s\n        }\n        before-actor-system-terminate {\n            timeout=30s\n        }\n      }\n    }\n    coordinated-shutdown.exit-jvm = on\n\n    loggers = [\"akka.event.slf4j.Slf4jLogger\"]\n    loglevel = \"DEBUG\"\n    logging-filter = \"akka.event.slf4j.Slf4jLoggingFilter\"\n\n    http {\n      host-connection-pool {\n        max-open-requests = 2048\n        max-retries = 0\n        max-connection-backoff = 1000 ms\n        max-connections = 100\n      }\n      server.parsing.max-content-length = 120m\n      server.parsing.max-chunk-size= 120m\n      client.parsing.max-chunk-size= 120m\n    }\n  }\n  cinnamon {\n    akka {\n      actors {\n        \"/user/*\" {\n          report-by = class\n        }\n      }\n    }\n    prometheus {\n      exporters += http-server\n      http-server {\n        host = 127.0.0.1\n        host = ${?PROMETHEUS_HOST}\n        port = 9091\n        port = ${?PROMETHEUS_PORT}\n      }\n    }\n    slf4j.mdc {\n      serialization.limit = 2048 bytes\n    }\n  }\n  cinnamon.akka.http.servers {\n    \"*:*\" {\n      paths {\n        \"*\" {\n          metrics = on\n        }\n      }\n    }\n  }\n  cinnamon.akka.http.clients {\n    \"*:*\" {\n      paths {\n        \"*\" {\n          metrics = on\n        }\n      }\n    }\n  }\n  azurestorage-dispatcher {\n    type = Dispatcher\n    executor = \"thread-pool-executor\"\n    thread-pool-executor {\n     fixed-pool-size = 16\n    }\n    throughput = 1\n  }\n  config{\n    http {\n      server-request-timeout = 125\n      connect-timeout = 1\n    }\n  }\n}\napp {\n    apiConfigCache{\n        url=${API_CONFIG_CACHE_URL}\n        keys=\"\"\n        subscriptionKey=${API_CONFIG_CACHE_SUBSCRIPTION_KEY}\n        timeout=60\n    }\n\tadapterEcommerce{\n\t    url=${ADAPTER_ECOMMERCE_URL}\n\t}\n    pdd-host-header-name=X-Original-Forwarded-For\n    configScheduleMinutes=1\n    coordinatedShutdown=true\n    waitAsyncProcesses=true\n    coordinatedShutdownHttpTimeout=130\n    coordinatedShutdownTerminationTimeout=20\n    routing.useMetrics=true\n    bundle.startup.timeout=120\n    bundle.checkUTF8=false\n    bundleTimeoutSeconds=600#10 minuti\n    reXmlLog=${RE_XML_LOG_ACTIVE}\n    reJsonLog=${RE_JSON_LOG_ACTIVE}\n    azure-storage {\n        blob-name = ${AZURE_STORAGE_BLOB_NAME}\n        table-name = ${AZURE_STORAGE_TABLE_NAME}\n        connection-string = ${AZURE_STORAGE_CONNECTION_STRING}\n    }\n\tazure-cosmos-data {\n\t\tendpoint = ${AZURE_COSMOS_ENDPOINT}\n\t\tkey = ${AZURE_COSMOS_KEY}\n\t\tdb-name = ${AZURE_COSMOS_DB_NAME}\n\t\ttable-name = ${AZURE_COSMOS_TABLE_NAME_DATA}\n\t\tconsistency-level = \"BOUNDED_STALENESS\"\n\t}\n\tazure-cosmos-events {\n\t\tendpoint = ${AZURE_COSMOS_ENDPOINT}\n\t\tkey = ${AZURE_COSMOS_KEY}\n\t\tdb-name = ${AZURE_COSMOS_DB_NAME}\n\t\ttable-name = ${AZURE_COSMOS_TABLE_NAME_EVENTS}\n\t}\n    azure-cosmos-receipts-rt {\n        endpoint = ${AZURE_COSMOS_ENDPOINT}\n        key = ${AZURE_COSMOS_KEY}\n        db-name = ${AZURE_COSMOS_DB_NAME}\n        table-name = ${AZURE_COSMOS_TABLE_NAME_RECEIPTS_RT}\n    }\n    micrometer {\n        http-server {\n            host = 127.0.0.1\n            host = ${?MICROMETER_HOST}\n            port = 9092\n            port = ${?MICROMETER_PORT}\n            hostname = \"wispsoapconverter-micrometer\"\n            hostname = ${?MICROMETER_HOSTNAME}\n        }\n    }\n}"
    logback.xml: "&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;configuration scan=&quot;true&quot; scanPeriod=&quot;30 seconds&quot;&gt;&lt;conversionRule conversionWord=&quot;bundleVersion&quot; converterClass=&quot;it.gov.pagopa.common.util.log.BundleVersionConverter&quot; /&gt;&lt;property name=&quot;CONSOLE_PATTERN&quot; value=&quot;%d %-5level [sid:%X{sessionId}] [can:%X{idCanale}] [sta:%X{idStazione}] [%logger] - %msg [%X{akkaSource}]%n&quot;/&gt;&lt;appender name=&quot;CONSOLE_APPENDER&quot; class=&quot;ch.qos.logback.core.ConsoleAppender&quot;&gt;&lt;encoder class=&quot;net.logstash.logback.encoder.LoggingEventCompositeJsonEncoder&quot;&gt;&lt;providers&gt;&lt;message/&gt;&lt;nestedField&gt;&lt;fieldName&gt;app&lt;/fieldName&gt;&lt;providers&gt;&lt;timestamp&gt;&lt;fieldName&gt;apptimestamp&lt;/fieldName&gt;&lt;/timestamp&gt;&lt;loggerName/&gt;&lt;threadName/&gt;&lt;logLevel/&gt;&lt;logLevelValue/&gt;&lt;stackTrace/&gt;&lt;mdc&gt;&lt;excludeMdcKeyName&gt;elapsed&lt;/excludeMdcKeyName&gt;&lt;/mdc&gt;&lt;tags/&gt;&lt;pattern&gt;&lt;omitEmptyFields&gt;true&lt;/omitEmptyFields&gt;&lt;pattern&gt;{ &quot;elapsed&quot;: &quot;#asLong{%mdc{elapsed}}&quot; }&lt;/pattern&gt;&lt;/pattern&gt;&lt;/providers&gt;&lt;/nestedField&gt;&lt;/providers&gt;&lt;/encoder&gt;&lt;/appender&gt;&lt;appender name=&quot;CONSOLE_APPENDER_ASYNC&quot; class=&quot;ch.qos.logback.classic.AsyncAppender&quot;&gt;&lt;appender-ref ref=&quot;CONSOLE_APPENDER&quot; /&gt;&lt;/appender&gt;&lt;logger name=&quot;it.gov.pagopa&quot; level=&quot;INFO&quot; /&gt;&lt;root level=&quot;INFO&quot;&gt;&lt;appender-ref ref=&quot;CONSOLE_APPENDER_ASYNC&quot; /&gt;&lt;/root&gt;&lt;/configuration&gt;"
  envFieldRef:
    MANAGEMENT_HTTP_HOST: "status.podIP"
    SERVICE_HTTP_HOST: "status.podIP"
    MICROMETER_HOSTNAME: "metadata.name"
    NAMESPACE: "metadata.namespace"
    CINNAMON_HOST: "metadata.name"
    APP_VERSION: "metadata.labels['app.kubernetes.io/version']"
    APP_NAME: "metadata.labels['app.kubernetes.io/name']"
  envSecret:
    APPLICATIONINSIGHTS_CONNECTION_STRING: "azure-insight-connection-string"
    API_CONFIG_CACHE_SUBSCRIPTION_KEY: "api-config-cache-subscription-key-string"
    AZURE_COSMOS_KEY: "cosmosdb-wisp-converter-account-key"
    AZURE_STORAGE_CONNECTION_STRING: "wisp-converter-re-sa-connection-string-key"
  keyvault:
    name: "pagopa-d-nodo-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - user
  canaryDelivery:
    create: false
